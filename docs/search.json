[
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "This week we’re exploring American Idol data! This is a comprehensive dataset put together by kkakey.\nThere’s so much data! What do you want to know about American Idol? Song choices, TV ratings, characteristics of winners?\n\nData in this dataset comes from Wikipedia. Data collected on seasons 1-18 of American Idol.\n\n\nThe Datasets\n\nsongs.csv - songs that contestants sang and competed with on American Idol from seasons 1-18\nauditions.csv - audition, cities, dates, and venues\nelimination_chart.csv - eliminations by week. Data availability varies season-to-season based on season length and number of finalists competing\nfinalists.csv - information on top contestants, including birthday, hometown, and description\nratings.csv - episode ratings and views.\nseasons.csv - season-level information, including season winner, runner-up, release dates, and judges"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#introduction",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#introduction",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "This week we’re exploring American Idol data! This is a comprehensive dataset put together by kkakey.\nThere’s so much data! What do you want to know about American Idol? Song choices, TV ratings, characteristics of winners?\n\nData in this dataset comes from Wikipedia. Data collected on seasons 1-18 of American Idol.\n\n\nThe Datasets\n\nsongs.csv - songs that contestants sang and competed with on American Idol from seasons 1-18\nauditions.csv - audition, cities, dates, and venues\nelimination_chart.csv - eliminations by week. Data availability varies season-to-season based on season length and number of finalists competing\nfinalists.csv - information on top contestants, including birthday, hometown, and description\nratings.csv - episode ratings and views.\nseasons.csv - season-level information, including season winner, runner-up, release dates, and judges"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#libraries",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#libraries",
    "title": "Tidy Tuesday Exercise",
    "section": "Libraries",
    "text": "Libraries\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tibble' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'purrr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'stringr' was built under R version 4.3.3\n\n\nWarning: package 'forcats' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(tidymodels)\n\nWarning: package 'tidymodels' was built under R version 4.3.3\n\n\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.6      ✔ rsample      1.2.1 \n✔ dials        1.2.1      ✔ tune         1.2.1 \n✔ infer        1.0.7      ✔ workflows    1.1.4 \n✔ modeldata    1.4.0      ✔ workflowsets 1.1.0 \n✔ parsnip      1.2.1      ✔ yardstick    1.3.1 \n✔ recipes      1.0.10     \n\n\nWarning: package 'broom' was built under R version 4.3.3\n\n\nWarning: package 'dials' was built under R version 4.3.3\n\n\nWarning: package 'scales' was built under R version 4.3.3\n\n\nWarning: package 'infer' was built under R version 4.3.3\n\n\nWarning: package 'modeldata' was built under R version 4.3.3\n\n\nWarning: package 'parsnip' was built under R version 4.3.3\n\n\nWarning: package 'recipes' was built under R version 4.3.3\n\n\nWarning: package 'rsample' was built under R version 4.3.3\n\n\nWarning: package 'tune' was built under R version 4.3.3\n\n\nWarning: package 'workflows' was built under R version 4.3.3\n\n\nWarning: package 'workflowsets' was built under R version 4.3.3\n\n\nWarning: package 'yardstick' was built under R version 4.3.3\n\n\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Use tidymodels_prefer() to resolve common conflicts.\n\nlibrary(tidytuesdayR)\n\nWarning: package 'tidytuesdayR' was built under R version 4.3.3\n\nlibrary(randomForest)\n\nWarning: package 'randomForest' was built under R version 4.3.3\n\n\nrandomForest 4.7-1.1\nType rfNews() to see new features/changes/bug fixes.\n\nAttaching package: 'randomForest'\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\nThe following object is masked from 'package:ggplot2':\n\n    margin\n\nlibrary(gbm)\n\nWarning: package 'gbm' was built under R version 4.3.3\n\n\nLoaded gbm 2.1.9\nThis version of gbm is no longer under development. Consider transitioning to gbm3, https://github.com/gbm-developers/gbm3\n\nlibrary(ggplot2)\nlibrary(ggmap)\n\nWarning: package 'ggmap' was built under R version 4.3.3\n\n\nℹ Google's Terms of Service: &lt;https://mapsplatform.google.com&gt;\n  Stadia Maps' Terms of Service: &lt;https://stadiamaps.com/terms-of-service/&gt;\n  OpenStreetMap's Tile Usage Policy: &lt;https://operations.osmfoundation.org/policies/tiles/&gt;\nℹ Please cite ggmap if you use it! Use `citation(\"ggmap\")` for details.\n\nlibrary(maps)\n\nWarning: package 'maps' was built under R version 4.3.3\n\n\n\nAttaching package: 'maps'\n\nThe following object is masked from 'package:purrr':\n\n    map\n\nlibrary(ggthemes)\n\nWarning: package 'ggthemes' was built under R version 4.3.3\n\nlibrary(highcharter)\n\nWarning: package 'highcharter' was built under R version 4.3.3\n\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \nHighcharts (www.highcharts.com) is a Highsoft software product which is\nnot free for commercial and Governmental use\n\nlibrary(mapdata)\n\nWarning: package 'mapdata' was built under R version 4.3.3\n\nlibrary(patchwork)\n\nWarning: package 'patchwork' was built under R version 4.3.3\n\nlibrary(themis)\n\nWarning: package 'themis' was built under R version 4.3.3\n\nlibrary(caret)\n\nWarning: package 'caret' was built under R version 4.3.3\n\n\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following objects are masked from 'package:yardstick':\n\n    precision, recall, sensitivity, specificity\n\nThe following object is masked from 'package:purrr':\n\n    lift\n\nlibrary(recipes)\nlibrary(kernlab)\n\n\nAttaching package: 'kernlab'\n\nThe following object is masked from 'package:scales':\n\n    alpha\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    alpha\n\nlibrary(knitr)"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#let-explore",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#let-explore",
    "title": "Tidy Tuesday Exercise",
    "section": "Let Explore!",
    "text": "Let Explore!\n\ntuesdata &lt;- tidytuesdayR::tt_load(2024, week = 30)\n\n--- Compiling #TidyTuesday Information for 2024-07-23 ----\n\n\n--- There are 6 files available ---\n\n\n--- Starting Download ---\n\n\n\n    Downloading file 1 of 6: `auditions.csv`\n    Downloading file 2 of 6: `eliminations.csv`\n    Downloading file 3 of 6: `finalists.csv`\n    Downloading file 4 of 6: `ratings.csv`\n    Downloading file 5 of 6: `seasons.csv`\n    Downloading file 6 of 6: `songs.csv`\n\n\n--- Download complete ---\n\nauditions &lt;- tuesdata$auditions\neliminations &lt;- tuesdata$eliminations\nfinalists &lt;- tuesdata$finalists\nratings &lt;- tuesdata$ratings\nseasons &lt;- tuesdata$seasons\nsongs &lt;- tuesdata$songs\n\nstr(finalists)\n\nspc_tbl_ [190 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Contestant : chr [1:190] \"Kelly Clarkson\" \"Justin Guarini\" \"Nikki McKibbin\" \"Tamyra Gray\" ...\n $ Birthday   : chr [1:190] \"24-Apr-82\" \"28-Oct-78\" \"28-Sep-78\" \"26-Jul-79\" ...\n $ Birthplace : chr [1:190] \"Fort Worth, Texas\" \"Columbus, Georgia\" \"Grand Prairie, Texas\" \"Takoma Park, Maryland\" ...\n $ Hometown   : chr [1:190] \"Burleson, Texas\" \"Doylestown, Pennsylvania\" NA \"Atlanta, Georgia\" ...\n $ Description: chr [1:190] \"She performed Aretha Franklin's version of \\\"Respectand Vanessa Williams' \\\"Save The Best For Lastin the Hollywood rounds.\" \"He performed  Oleta Adams' version of \\\"Get Herein the Hollywood rounds.\" \"She had previously been on Popstars and auditioned with Gloria Gaynor's \\\"I Will Surviveand Whitney Houston's \\\"| __truncated__ \"She had appeared on TV commercials and worked with other artists before auditioning for Idol, and was crowned M\"| __truncated__ ...\n $ Season     : num [1:190] 1 1 1 1 1 1 1 1 1 1 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Contestant = col_character(),\n  ..   Birthday = col_character(),\n  ..   Birthplace = col_character(),\n  ..   Hometown = col_character(),\n  ..   Description = col_character(),\n  ..   Season = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n# Inspect the data structures to verify column names\nglimpse(finalists)\n\nRows: 190\nColumns: 6\n$ Contestant  &lt;chr&gt; \"Kelly Clarkson\", \"Justin Guarini\", \"Nikki McKibbin\", \"Tam…\n$ Birthday    &lt;chr&gt; \"24-Apr-82\", \"28-Oct-78\", \"28-Sep-78\", \"26-Jul-79\", \"17-Ma…\n$ Birthplace  &lt;chr&gt; \"Fort Worth, Texas\", \"Columbus, Georgia\", \"Grand Prairie, …\n$ Hometown    &lt;chr&gt; \"Burleson, Texas\", \"Doylestown, Pennsylvania\", NA, \"Atlant…\n$ Description &lt;chr&gt; \"She performed Aretha Franklin's version of \\\"Respectand V…\n$ Season      &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2…\n\n# Clean finalists dataset with correct column names\nfinalists_clean &lt;- finalists %&gt;%\n  rename(\n    Contestant = Contestant,\n    Birthday = Birthday,\n    Birthplace = Birthplace,\n    Hometown = Hometown,\n    Description = Description,\n    Season = Season\n  ) %&gt;%\n  mutate(\n    Birthday = as.Date(Birthday, format=\"%Y-%m-%d\"),\n    Season = as.numeric(Season)\n  )\n\n# Clean other datasets\nauditions_clean &lt;- auditions %&gt;%\n  mutate(\n    season = as.numeric(season),\n    audition_date_start = as.Date(audition_date_start, format=\"%Y-%m-%d\"),\n    audition_date_end = as.Date(audition_date_end, format=\"%Y-%m-%d\"),\n    audition_city = as.character(audition_city),\n    audition_venue = as.character(audition_venue),\n    episodes = as.character(episodes),\n    episode_air_date = as.Date(episode_air_date, format=\"%Y-%m-%d\"),\n    callback_venue = as.character(callback_venue),\n    callback_date_start = as.Date(callback_date_start, format=\"%Y-%m-%d\"),\n    callback_date_end = as.Date(callback_date_end, format=\"%Y-%m-%d\"),\n    tickets_to_hollywood = as.numeric(tickets_to_hollywood),\n    guest_judge = as.character(guest_judge)\n  )\n\neliminations_clean &lt;- eliminations %&gt;%\n  mutate(\n    season = as.numeric(season),\n    place = as.character(place),\n    gender = as.character(gender),\n    contestant = as.character(contestant)\n  )\n\nratings_clean &lt;- ratings %&gt;%\n  mutate(\n    season = as.numeric(season),\n    show_number = as.numeric(show_number),\n    episode = as.character(episode),\n    airdate = as.Date(airdate, format=\"%Y-%m-%d\"),\n    viewers_in_millions = as.numeric(viewers_in_millions),\n    timeslot_et = as.character(timeslot_et),\n    dvr_viewers_millions = as.numeric(dvr_viewers_millions),\n    total_viewers_millions = as.numeric(total_viewers_millions),\n    nightlyrank = as.numeric(nightlyrank)\n  )\n\nWarning: There were 2 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `dvr_viewers_millions = as.numeric(dvr_viewers_millions)`.\nCaused by warning:\n! NAs introduced by coercion\nℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.\n\nseasons_clean &lt;- seasons %&gt;%\n  mutate(\n    season = as.numeric(season),\n    winner = as.character(winner),\n    runner_up = as.character(runner_up),\n    original_release = as.character(original_release),\n    original_network = as.character(original_network),\n    hosted_by = as.character(hosted_by),\n    judges = as.character(judges),\n    no_of_episodes = as.numeric(no_of_episodes),\n    finals_venue = as.character(finals_venue),\n    mentor = as.character(mentor)\n  )\n\nsongs_clean &lt;- songs %&gt;%\n  mutate(\n    season = as.numeric(season),\n    week = as.character(week),\n    order = as.numeric(order),\n    contestant = as.character(contestant),\n    song = as.character(song),\n    artist = as.character(artist),\n    song_theme = as.character(song_theme),\n    result = as.character(result)\n  )\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `season = as.numeric(season)`.\nCaused by warning:\n! NAs introduced by coercion\n\n# Merge relevant datasets\n# Check if gender exists in eliminations_clean and join with finalists_clean\nif (\"gender\" %in% colnames(eliminations_clean)) {\n  finalists_clean &lt;- finalists_clean %&gt;%\n    inner_join(eliminations_clean %&gt;% select(contestant, gender), by = c(\"Contestant\" = \"contestant\"))\n}\n\n# Merge with seasons_clean\ndata &lt;- finalists_clean %&gt;%\n  inner_join(seasons_clean, by = c(\"Season\" = \"season\"))\ndata &lt;- songs_clean %&gt;%\n  left_join(finalists_clean, by = c(\"contestant\" = \"Contestant\", \"season\" = \"Season\")) %&gt;%\n  mutate(finalist = ifelse(!is.na(Hometown), 1, 0))"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#exploring-our-data",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#exploring-our-data",
    "title": "Tidy Tuesday Exercise",
    "section": "Exploring our Data",
    "text": "Exploring our Data\n\n# Inspect cleaned data\nstr(auditions_clean)\n\ntibble [142 × 12] (S3: tbl_df/tbl/data.frame)\n $ season              : num [1:142] 1 1 1 1 1 1 1 2 2 2 ...\n $ audition_date_start : Date[1:142], format: \"2002-04-20\" \"2002-04-23\" ...\n $ audition_date_end   : Date[1:142], format: \"2002-04-22\" \"2002-04-25\" ...\n $ audition_city       : chr [1:142] \"Los Angeles, California\" \"Seattle, Washington\" \"Chicago, Illinois\" \"New York City, New York\" ...\n $ audition_venue      : chr [1:142] \"Westin Bonaventure Hotel\" \"Hyatt Regency Hotel\" \"Congress Plaza Hotel\" \"Millenium Hilton Hotel\" ...\n $ episodes            : chr [1:142] NA NA NA NA ...\n $ episode_air_date    : Date[1:142], format: NA NA ...\n $ callback_venue      : chr [1:142] NA NA NA NA ...\n $ callback_date_start : Date[1:142], format: NA NA ...\n $ callback_date_end   : Date[1:142], format: NA NA ...\n $ tickets_to_hollywood: num [1:142] 31 10 23 25 15 11 6 22 35 46 ...\n $ guest_judge         : chr [1:142] NA NA NA NA ...\n\nstr(eliminations_clean)\n\ntibble [456 × 46] (S3: tbl_df/tbl/data.frame)\n $ season    : num [1:456] 1 1 1 1 1 1 1 1 1 1 ...\n $ place     : chr [1:456] \"1\" \"2\" \"3\" \"4\" ...\n $ gender    : chr [1:456] \"Female\" \"Male\" \"Female\" \"Female\" ...\n $ contestant: chr [1:456] \"Kelly Clarkson\" \"Justin Guarini\" \"Nikki McKibbin\" \"Tamyra Gray\" ...\n $ top_36    : chr [1:456] NA NA NA NA ...\n $ top_36_2  : chr [1:456] NA NA NA NA ...\n $ top_36_3  : chr [1:456] NA NA NA NA ...\n $ top_36_4  : chr [1:456] NA NA NA NA ...\n $ top_32    : chr [1:456] NA NA NA NA ...\n $ top_32_2  : chr [1:456] NA NA NA NA ...\n $ top_32_3  : chr [1:456] NA NA NA NA ...\n $ top_32_4  : chr [1:456] NA NA NA NA ...\n $ top_30    : chr [1:456] \"N/A\" \"N/A\" \"N/A\" \"Safe (1st)\" ...\n $ top_30_2  : chr [1:456] \"Safe (2nd)\" \"Safe (1st)\" \"N/A\" \"N/A\" ...\n $ top_30_3  : chr [1:456] \"N/A\" \"N/A\" \"Safe (2nd)\" \"N/A\" ...\n $ top_25    : chr [1:456] NA NA NA NA ...\n $ top_25_2  : chr [1:456] NA NA NA NA ...\n $ top_25_3  : chr [1:456] NA NA NA NA ...\n $ top_24    : chr [1:456] NA NA NA NA ...\n $ top_24_2  : chr [1:456] NA NA NA NA ...\n $ top_24_3  : chr [1:456] NA NA NA NA ...\n $ top_20    : chr [1:456] NA NA NA NA ...\n $ top_20_2  : chr [1:456] NA NA NA NA ...\n $ top_16    : chr [1:456] NA NA NA NA ...\n $ top_14    : chr [1:456] NA NA NA NA ...\n $ top_13    : chr [1:456] NA NA NA NA ...\n $ top_12    : chr [1:456] NA NA NA NA ...\n $ top_11    : chr [1:456] NA NA NA NA ...\n $ top_11_2  : chr [1:456] NA NA NA NA ...\n $ wildcard  : chr [1:456] \"N/A\" \"N/A\" \"N/A\" \"N/A\" ...\n $ comeback  : logi [1:456] NA NA NA NA NA NA ...\n $ top_10    : chr [1:456] \"Safe\" \"Safe\" \"Bottom Three\" \"Safe\" ...\n $ top_9     : chr [1:456] NA NA NA NA ...\n $ top_9_2   : chr [1:456] NA NA NA NA ...\n $ top_8     : chr [1:456] \"Safe\" \"Safe\" \"Safe\" \"Safe\" ...\n $ top_8_2   : chr [1:456] NA NA NA NA ...\n $ top_7     : chr [1:456] \"Safe\" \"Bottom Two\" \"Bottom Three\" \"Safe\" ...\n $ top_7_2   : chr [1:456] NA NA NA NA ...\n $ top_6     : chr [1:456] \"Safe\" \"Safe\" \"Bottom Three\" \"Safe\" ...\n $ top_6_2   : chr [1:456] NA NA NA NA ...\n $ top_5     : chr [1:456] \"Safe\" \"Safe\" \"Bottom Two\" \"Safe\" ...\n $ top_5_2   : chr [1:456] NA NA NA NA ...\n $ top_4     : chr [1:456] \"Safe\" \"Safe\" \"Bottom Two\" \"Eliminated\" ...\n $ top_4_2   : chr [1:456] NA NA NA NA ...\n $ top_3     : chr [1:456] \"Safe\" \"Safe\" \"Eliminated\" NA ...\n $ finale    : chr [1:456] \"Winner\" \"Runner-Up\" NA NA ...\n\nstr(finalists_clean)\n\ntibble [185 × 7] (S3: tbl_df/tbl/data.frame)\n $ Contestant : chr [1:185] \"Kelly Clarkson\" \"Justin Guarini\" \"Nikki McKibbin\" \"Tamyra Gray\" ...\n $ Birthday   : Date[1:185], format: NA NA ...\n $ Birthplace : chr [1:185] \"Fort Worth, Texas\" \"Columbus, Georgia\" \"Grand Prairie, Texas\" \"Takoma Park, Maryland\" ...\n $ Hometown   : chr [1:185] \"Burleson, Texas\" \"Doylestown, Pennsylvania\" NA \"Atlanta, Georgia\" ...\n $ Description: chr [1:185] \"She performed Aretha Franklin's version of \\\"Respectand Vanessa Williams' \\\"Save The Best For Lastin the Hollywood rounds.\" \"He performed  Oleta Adams' version of \\\"Get Herein the Hollywood rounds.\" \"She had previously been on Popstars and auditioned with Gloria Gaynor's \\\"I Will Surviveand Whitney Houston's \\\"| __truncated__ \"She had appeared on TV commercials and worked with other artists before auditioning for Idol, and was crowned M\"| __truncated__ ...\n $ Season     : num [1:185] 1 1 1 1 1 1 1 1 1 1 ...\n $ gender     : chr [1:185] \"Female\" \"Male\" \"Female\" \"Female\" ...\n\nstr(ratings_clean)\n\ntibble [593 × 17] (S3: tbl_df/tbl/data.frame)\n $ season                 : num [1:593] 1 1 1 1 1 1 1 1 1 1 ...\n $ show_number            : num [1:593] 1 2 3 4 5 6 7 8 9 10 ...\n $ episode                : chr [1:593] \"Auditions\" \"Hollywood Week\" \"Top 30: Group 1\" \"Top 30: Group 1 results\" ...\n $ airdate                : Date[1:593], format: NA NA ...\n $ 18_49_rating_share     : chr [1:593] \"4.8\" \"5.2\" \"5.2\" \"4.7\" ...\n $ viewers_in_millions    : num [1:593] 9.85 11.24 10.3 9.47 9.08 ...\n $ timeslot_et            : chr [1:593] NA NA NA NA ...\n $ dvr_18_49              : chr [1:593] NA NA NA NA ...\n $ dvr_viewers_millions   : num [1:593] NA NA NA NA NA NA NA NA NA NA ...\n $ total_18_49            : chr [1:593] NA NA NA NA ...\n $ total_viewers_millions : num [1:593] NA NA NA NA NA NA NA NA NA NA ...\n $ weekrank               : chr [1:593] \"12\" \"6\" \"6\" \"22\" ...\n $ ref                    : logi [1:593] NA NA NA NA NA NA ...\n $ share                  : chr [1:593] NA NA NA NA ...\n $ nightlyrank            : num [1:593] NA NA NA NA NA NA NA NA NA NA ...\n $ rating_share_households: chr [1:593] NA NA NA NA ...\n $ rating_share           : chr [1:593] \"6.1 / 11\" \"6.9 / 12\" \"6.2 / 11\" \"5.8 / 10\" ...\n\nstr(seasons_clean)\n\ntibble [18 × 10] (S3: tbl_df/tbl/data.frame)\n $ season          : num [1:18] 1 2 3 4 5 6 7 8 9 10 ...\n $ winner          : chr [1:18] \"Kelly Clarkson\" \"Ruben Studdard\" \"Fantasia Barrino\" \"Carrie Underwood\" ...\n $ runner_up       : chr [1:18] \"Justin Guarini\" \"Clay Aiken\" \"Diana DeGarmo\" \"Bo Bice\" ...\n $ original_release: chr [1:18] \"June 11 (2002-06-11) –September 4, 2002 (2002-09-04)\" \"January 21 (2003-01-21) –May 21, 2003 (2003-05-21)\" \"January 19 (2004-01-19) –May 26, 2004 (2004-05-26)\" \"January 18 (2005-01-18) –May 25, 2005 (2005-05-25)\" ...\n $ original_network: chr [1:18] \"Fox\" \"Fox\" \"Fox\" \"Fox\" ...\n $ hosted_by       : chr [1:18] \"Ryan Seacrest; Brian Dunkleman\" \"Ryan Seacrest\" \"Ryan Seacrest\" \"Ryan Seacrest\" ...\n $ judges          : chr [1:18] \"Paula Abdul; Simon Cowell; Randy Jackson\" \"Paula Abdul; Simon Cowell; Randy Jackson\" \"Paula Abdul; Simon Cowell; Randy Jackson\" \"Paula Abdul; Simon Cowell; Randy Jackson\" ...\n $ no_of_episodes  : num [1:18] NA NA NA NA NA NA NA NA NA NA ...\n $ finals_venue    : chr [1:18] \"Kodak Theatre\" \"Gibson Amphitheatre\" \"Kodak Theatre\" \"Kodak Theatre\" ...\n $ mentor          : chr [1:18] NA NA NA NA ...\n\nstr(songs_clean)\n\ntibble [2,429 × 8] (S3: tbl_df/tbl/data.frame)\n $ season    : num [1:2429] NA NA NA NA NA NA NA NA NA NA ...\n $ week      : chr [1:2429] \"20020618_top_30_group_1\" \"20020618_top_30_group_1\" \"20020618_top_30_group_1\" \"20020618_top_30_group_1\" ...\n $ order     : num [1:2429] 1 2 3 4 5 6 7 8 9 10 ...\n $ contestant: chr [1:2429] \"Tamyra Gray\" \"Jim Verraros\" \"Adriel Herrera\" \"Rodesia Eaves\" ...\n $ song      : chr [1:2429] \"And I Am Telling You I'm Not Going\" \"When I Fall in Love\" \"I'll Be\" \"Daydream Believer\" ...\n $ artist    : chr [1:2429] \"Jennifer Holliday\" \"Doris Day\" \"Edwin McCain\" \"The Monkees\" ...\n $ song_theme: chr [1:2429] NA NA NA NA ...\n $ result    : chr [1:2429] \"Advanced (1st)\" \"Advanced (3rd)\" \"Eliminated\" \"Eliminated\" ...\n\nsummary(auditions_clean)\n\n     season      audition_date_start  audition_date_end    audition_city     \n Min.   : 1.00   Min.   :2002-04-20   Min.   :2002-04-22   Length:142        \n 1st Qu.: 6.00   1st Qu.:2006-08-11   1st Qu.:2006-08-11   Class :character  \n Median :10.00   Median :2010-09-05   Median :2010-09-05   Mode  :character  \n Mean   :10.37   Mean   :2011-04-14   Mean   :2011-04-14                     \n 3rd Qu.:15.00   3rd Qu.:2015-09-05   3rd Qu.:2015-09-05                     \n Max.   :18.00   Max.   :2019-09-21   Max.   :2019-09-21                     \n                                                                             \n audition_venue       episodes         episode_air_date callback_venue    \n Length:142         Length:142         Min.   :NA       Length:142        \n Class :character   Class :character   1st Qu.:NA       Class :character  \n Mode  :character   Mode  :character   Median :NA       Mode  :character  \n                                       Mean   :NaN                        \n                                       3rd Qu.:NA                         \n                                       Max.   :NA                         \n                                       NA's   :142                        \n callback_date_start  callback_date_end    tickets_to_hollywood\n Min.   :2002-02-06   Min.   :2002-02-06   Min.   :  6.0       \n 1st Qu.:2006-10-02   1st Qu.:2006-10-03   1st Qu.: 20.0       \n Median :2010-11-09   Median :2010-11-10   Median : 29.0       \n Mean   :2011-06-11   Mean   :2011-06-12   Mean   : 41.8       \n 3rd Qu.:2015-09-13   3rd Qu.:2015-09-14   3rd Qu.: 37.0       \n Max.   :2019-09-21   Max.   :2019-09-21   Max.   :561.0       \n NA's   :13           NA's   :13           NA's   :48          \n guest_judge       \n Length:142        \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n                   \n\nsummary(eliminations_clean)\n\n     season         place              gender           contestant       \n Min.   : 1.00   Length:456         Length:456         Length:456        \n 1st Qu.: 4.00   Class :character   Class :character   Class :character  \n Median : 8.00   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 8.86                                                           \n 3rd Qu.:13.00                                                           \n Max.   :18.00                                                           \n    top_36            top_36_2           top_36_3           top_36_4        \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    top_32            top_32_2           top_32_3           top_32_4        \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    top_30            top_30_2           top_30_3            top_25         \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   top_25_2           top_25_3            top_24            top_24_2        \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   top_24_3            top_20            top_20_2            top_16         \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    top_14             top_13             top_12             top_11         \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n   top_11_2           wildcard         comeback          top_10         \n Length:456         Length:456         Mode:logical   Length:456        \n Class :character   Class :character   NA's:456       Class :character  \n Mode  :character   Mode  :character                  Mode  :character  \n                                                                        \n                                                                        \n                                                                        \n    top_9             top_9_2             top_8             top_8_2         \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    top_7             top_7_2             top_6             top_6_2         \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    top_5             top_5_2             top_4             top_4_2         \n Length:456         Length:456         Length:456         Length:456        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    top_3              finale         \n Length:456         Length:456        \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n\nsummary(finalists_clean)\n\n  Contestant           Birthday    Birthplace          Hometown        \n Length:185         Min.   :NA    Length:185         Length:185        \n Class :character   1st Qu.:NA    Class :character   Class :character  \n Mode  :character   Median :NA    Mode  :character   Mode  :character  \n                    Mean   :NaN                                        \n                    3rd Qu.:NA                                         \n                    Max.   :NA                                         \n                    NA's   :185                                        \n Description            Season          gender         \n Length:185         Min.   : 1.000   Length:185        \n Class :character   1st Qu.: 5.000   Class :character  \n Mode  :character   Median : 9.000   Mode  :character  \n                    Mean   : 8.957                     \n                    3rd Qu.:13.000                     \n                    Max.   :17.000                     \n                                                       \n\nsummary(ratings_clean)\n\n     season        show_number      episode             airdate   \n Min.   : 1.000   Min.   : 1.00   Length:593         Min.   :NA   \n 1st Qu.: 4.000   1st Qu.: 9.00   Class :character   1st Qu.:NA   \n Median : 8.000   Median :18.00   Mode  :character   Median :NA   \n Mean   : 8.295   Mean   :19.24                      Mean   :NaN  \n 3rd Qu.:12.000   3rd Qu.:29.00                      3rd Qu.:NA   \n Max.   :18.000   Max.   :44.00                      Max.   :NA   \n                                                     NA's   :593  \n 18_49_rating_share viewers_in_millions timeslot_et         dvr_18_49        \n Length:593         Min.   : 5.38       Length:593         Length:593        \n Class :character   1st Qu.:12.57       Class :character   Class :character  \n Mode  :character   Median :21.76       Mode  :character   Mode  :character  \n                    Mean   :19.88                                            \n                    3rd Qu.:26.09                                            \n                    Max.   :38.10                                            \n                    NA's   :3                                                \n dvr_viewers_millions total_18_49        total_viewers_millions\n Min.   :0.950        Length:593         Min.   : 5.480        \n 1st Qu.:1.280        Class :character   1st Qu.: 8.290        \n Median :1.530        Mode  :character   Median : 8.790        \n Mean   :1.491                           Mean   : 8.771        \n 3rd Qu.:1.685                           3rd Qu.: 9.200        \n Max.   :1.950                           Max.   :11.840        \n NA's   :542                             NA's   :542           \n   weekrank           ref             share            nightlyrank   \n Length:593         Mode:logical   Length:593         Min.   :1.000  \n Class :character   NA's:593       Class :character   1st Qu.:1.000  \n Mode  :character                  Mode  :character   Median :2.000  \n                                                      Mean   :2.083  \n                                                      3rd Qu.:3.000  \n                                                      Max.   :4.000  \n                                                      NA's   :569    \n rating_share_households rating_share      \n Length:593              Length:593        \n Class :character        Class :character  \n Mode  :character        Mode  :character  \n                                           \n                                           \n                                           \n                                           \n\nsummary(seasons_clean)\n\n     season         winner           runner_up         original_release  \n Min.   : 1.00   Length:18          Length:18          Length:18         \n 1st Qu.: 5.25   Class :character   Class :character   Class :character  \n Median : 9.50   Mode  :character   Mode  :character   Mode  :character  \n Mean   : 9.50                                                           \n 3rd Qu.:13.75                                                           \n Max.   :18.00                                                           \n                                                                         \n original_network    hosted_by            judges          no_of_episodes \n Length:18          Length:18          Length:18          Min.   :16.00  \n Class :character   Class :character   Class :character   1st Qu.:18.25  \n Mode  :character   Mode  :character   Mode  :character   Median :19.00  \n                                                          Mean   :19.50  \n                                                          3rd Qu.:20.25  \n                                                          Max.   :24.00  \n                                                          NA's   :14     \n finals_venue          mentor         \n Length:18          Length:18         \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n\nsummary(songs_clean)\n\n     season         week               order         contestant       \n Min.   : NA    Length:2429        Min.   : 1.000   Length:2429       \n 1st Qu.: NA    Class :character   1st Qu.: 3.000   Class :character  \n Median : NA    Mode  :character   Median : 5.000   Mode  :character  \n Mean   :NaN                       Mean   : 5.931                     \n 3rd Qu.: NA                       3rd Qu.: 8.000                     \n Max.   : NA                       Max.   :40.000                     \n NA's   :2429                                                         \n     song              artist           song_theme           result         \n Length:2429        Length:2429        Length:2429        Length:2429       \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n                                                                            \n\n# Bar graph showing the number of tickets to Hollywood based on top 10 audition cities\ntop_10_cities &lt;- auditions_clean %&gt;%\n  group_by(audition_city) %&gt;%\n  summarize(total_tickets = sum(tickets_to_hollywood, na.rm = TRUE)) %&gt;%\n  arrange(desc(total_tickets)) %&gt;%\n  slice(1:10)\n\nggplot(top_10_cities, aes(x = audition_city, y = total_tickets)) +\n  geom_col(fill = \"red\") +\n  theme_minimal() +\n  coord_flip() +\n  labs(title = \"Number of Tickets to Hollywood by Top 10 Audition Cities\", x = \"City\", y = \"Tickets to Hollywood\") +\n  theme(plot.title = element_text(size = 16, face = \"bold\"),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10),\n        axis.ticks.length = unit(0.25, \"cm\"))\n\n\n\n#  Comparison of male eliminations vs female eliminations\nggplot(eliminations_clean, aes(x = gender, fill = gender)) +\n  geom_bar() +\n  scale_fill_manual(values = c(\"orange\", \"black\")) +\n  theme_minimal() +\n  labs(title = \"American Idol Male vs Female Eliminations\", x = \"Gender\", y = \"Count\") +\n  theme(plot.title = element_text(size = 16, face = \"bold\"),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10))\n\n\n\n# Trend of number of viewers per episode over the seasons\nratings_clean %&gt;%\n  group_by(season) %&gt;%\n  summarise(average_viewers = mean(viewers_in_millions, na.rm = TRUE)) %&gt;%\n  hchart(\"line\", hcaes(x = season, y = average_viewers), name = \"Average Viewers\") %&gt;%\n  hc_title(text = \"Number of Viewers Per Episode Over the Seasons\") %&gt;%\n  hc_xAxis(title = list(text = \"Season\")) %&gt;%\n  hc_yAxis(title = list(text = \"Average Viewers (Millions)\")) %&gt;%\n  hc_plotOptions(line = list(color = \"#00008B\"))"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#modeling",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#modeling",
    "title": "Tidy Tuesday Exercise",
    "section": "Modeling",
    "text": "Modeling\n\n# Merge necessary data\nsong_data &lt;- songs %&gt;%\n  group_by(contestant) %&gt;%\n  summarise(total_songs = n(), genres = paste(unique(song_theme), collapse = \",\"))\n\n# Define winners based on place column in the eliminations table\nwinners_data &lt;- eliminations %&gt;%\n  filter(place == \"1\") %&gt;%\n  select(season, contestant)\n\n# Add information about winners\ncontestant_details &lt;- finalists %&gt;%\n  mutate(is_winner = if_else(Contestant %in% winners_data$contestant, 1, 0)) %&gt;%\n  left_join(song_data, by = c(\"Contestant\" = \"contestant\"))\n\n# Handle missing values (if any)\ncontestant_details &lt;- contestant_details %&gt;%\n  replace_na(list(total_songs = 0, genres = \"unknown\"))\n\n# Ensure the is_winner variable is a factor with two levels\ncontestant_details &lt;- contestant_details %&gt;%\n  mutate(is_winner = factor(is_winner, levels = c(0, 1)))\n\n# Remove rows with any NA values\ncontestant_details &lt;- na.omit(contestant_details)\n\n# Split the data into training and testing sets\nset.seed(123)\ntrain_indices &lt;- createDataPartition(contestant_details$is_winner, p = 0.8, list = FALSE)\ntrain_set &lt;- contestant_details[train_indices, ]\ntest_set &lt;- contestant_details[-train_indices, ]\n\n# Pre-process Data\nprep_recipe &lt;- recipe(is_winner ~ total_songs, data = train_set) %&gt;%\n  step_normalize(all_predictors())\n\nprepped_recipe &lt;- prep(prep_recipe)\ntrain_processed &lt;- bake(prepped_recipe, new_data = NULL)\ntest_processed &lt;- bake(prepped_recipe, new_data = test_set)\n\n# Define and Fit at least 3 Different Model Types\n## Model 1: Logistic Regression\nlog_reg_spec &lt;- logistic_reg() %&gt;%\n  set_engine(\"glm\")\n\nlog_reg_workflow &lt;- workflow() %&gt;%\n  add_model(log_reg_spec) %&gt;%\n  add_recipe(prep_recipe)\n\n## Model 2: Random Forest\nrf_spec &lt;- rand_forest(trees = 1000) %&gt;%\n  set_engine(\"ranger\") %&gt;%\n  set_mode(\"classification\")\n\nrf_workflow &lt;- workflow() %&gt;%\n  add_model(rf_spec) %&gt;%\n  add_recipe(prep_recipe)\n\n## Model 3: Support Vector Machine\nsvm_spec &lt;- svm_rbf() %&gt;%\n  set_engine(\"kernlab\") %&gt;%\n  set_mode(\"classification\")\n\nsvm_workflow &lt;- workflow() %&gt;%\n  add_model(svm_spec) %&gt;%\n  add_recipe(prep_recipe)\n\n# Create cross-validation folds\nset.seed(123)\ncv_folds &lt;- vfold_cv(train_set, v = 5)\n\n# Define metrics\nmetric_set &lt;- yardstick::metric_set(yardstick::roc_auc, yardstick::accuracy)\n\n# Fit and evaluate models using cross-validation\nlog_reg_results &lt;- fit_resamples(\n  log_reg_workflow,\n  resamples = cv_folds,\n  metrics = metric_set\n)\n\nrf_results &lt;- fit_resamples(\n  rf_workflow,\n  resamples = cv_folds,\n  metrics = metric_set\n)\n\nWarning: package 'ranger' was built under R version 4.3.3\n\nsvm_results &lt;- fit_resamples(\n  svm_workflow,\n  resamples = cv_folds,\n  metrics = metric_set\n)\n\n# Collect and compare metrics\nlog_reg_metrics &lt;- collect_metrics(log_reg_results)\nrf_metrics &lt;- collect_metrics(rf_results)\nsvm_metrics &lt;- collect_metrics(svm_results)\n\nlog_reg_metrics\n\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n std_err .config             \n  &lt;chr&gt;    &lt;chr&gt;      &lt;dbl&gt; &lt;int&gt;   &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary     0.909     5  0.0321 Preprocessor1_Model1\n2 roc_auc  binary     0.859     5  0.0542 Preprocessor1_Model1"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#evaluation",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#evaluation",
    "title": "Tidy Tuesday Exercise",
    "section": "evaluation",
    "text": "evaluation\n\n# Choose the best model based on cross-validation performance\noptimal_model_workflow &lt;- log_reg_workflow \n\n# Fit the best model on the entire training set\ntrained_model &lt;- fit(optimal_model_workflow, data = train_set)\n\n# Evaluate the model on the test set\ntest_predictions &lt;- predict(trained_model, test_set) %&gt;%\n  bind_cols(test_set)\n\n# Creating a confusion matrix\nconf_matrix &lt;- confusionMatrix(test_predictions$.pred_class, test_set$is_winner)\n\n# Print confusion matrix\nprint(conf_matrix)\n\nConfusion Matrix and Statistics\n\n          Reference\nPrediction  0  1\n         0 16  2\n         1  1  0\n                                          \n               Accuracy : 0.8421          \n                 95% CI : (0.6042, 0.9662)\n    No Information Rate : 0.8947          \n    P-Value [Acc &gt; NIR] : 0.8676          \n                                          \n                  Kappa : -0.0755         \n                                          \n Mcnemar's Test P-Value : 1.0000          \n                                          \n            Sensitivity : 0.9412          \n            Specificity : 0.0000          \n         Pos Pred Value : 0.8889          \n         Neg Pred Value : 0.0000          \n             Prevalence : 0.8947          \n         Detection Rate : 0.8421          \n   Detection Prevalence : 0.9474          \n      Balanced Accuracy : 0.4706          \n                                          \n       'Positive' Class : 0               \n                                          \n\n# Extracting metrics\naccuracy &lt;- conf_matrix$overall['Accuracy']\nprecision &lt;- conf_matrix$byClass['Pos Pred Value']  # Precision\nrecall &lt;- conf_matrix$byClass['Sensitivity']       # Recall\nf1_score &lt;- 2 * (precision * recall) / (precision + recall)\n\n# Printing the metrics\ncat(\"Accuracy:\", accuracy, \"\\n\")\n\nAccuracy: 0.8421053 \n\ncat(\"Precision:\", precision, \"\\n\")\n\nPrecision: 0.8888889 \n\ncat(\"Recall:\", recall, \"\\n\")\n\nRecall: 0.9411765 \n\ncat(\"F1 Score:\", f1_score, \"\\n\")\n\nF1 Score: 0.9142857"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#final-model",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#final-model",
    "title": "Tidy Tuesday Exercise",
    "section": "final model",
    "text": "final model\n\n# Define performance metrics\nperformance_metrics &lt;- data.frame(\n  Metric = c(\"Accuracy\", \"Precision\", \"Recall\", \"F1 Score\"),\n  Value = c(as.numeric(accuracy), as.numeric(precision), as.numeric(recall), as.numeric(f1_score))\n)\n\n# Plotting the metrics using ggplot2\nlibrary(ggplot2)\n\nggplot(performance_metrics, aes(x = Metric, y = Value, group = 1)) +\n  geom_line(color = \"blue\") +\n  geom_point(size = 3, color = \"red\") +\n  theme_minimal() +\n  labs(title = \"Performance Metrics for Logistic Regression Model\",\n       x = \"Metric\",\n       y = \"Value\") +\n  ylim(0, 1.2) +\n  theme(plot.title = element_text(size = 16, face = \"bold\"),\n        axis.text.x = element_text(size = 10),\n        axis.text.y = element_text(size = 10),\n        axis.ticks.length = unit(0.25, \"cm\"),\n        panel.grid.major = element_line(color = \"grey\"),\n        panel.grid.minor = element_line(color = \"lightgrey\"))"
  },
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html#summary",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html#summary",
    "title": "Tidy Tuesday Exercise",
    "section": "summary",
    "text": "summary\nThe data supports the hypothesis that contestants who perform more songs are more likely to reach the finals. The Logistic Regression model shows high accuracy with reasonable precision and recall, indicating that the number of songs sung is a strong predictor of a contestant’s likelihood of making it to the finals. Overall, the analysis confirms that singing more songs increases the chances of reaching the finals, validating the hypothesis and providing valuable insights into the factors contributing to success on American Idol."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "",
    "text": "ALEX MARTINEZ contributed to this exercise\nThe structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats.\nWarning: package 'here' was built under R version 4.3.3"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.1 General Background Information",
    "text": "2.1 General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.2 Description of data and data source",
    "text": "2.2 Description of data and data source\nThe two columns I added were Shoe Size and Hair Color. Shoe size variable ranges from 3 to 12 and the different Hair Colors were black, red, blue, grey and brown."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "2.3 Questions/Hypotheses to be addressed",
    "text": "2.3 Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, Shen, & Handel, 2020)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.1 Data aquisition",
    "text": "3.1 Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.2 Data import and cleaning",
    "text": "3.2 Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along.\n\nlibrary(ggplot2) #for plotting\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\nlibrary(broom) #for cleaning up output from lm()\n\nWarning: package 'broom' was built under R version 4.3.3\n\nlibrary(here) #for data loading/saving\nlibrary(readr)\n\nWarning: package 'readr' was built under R version 4.3.3\n\nlibrary(readxl)\n\nWarning: package 'readxl' was built under R version 4.3.3\n\n#path to data\n#note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\ndata_location\n\n[1] \"C:/Users/alexm/Downloads/Pract 2/AlexMartinez-P2-portfolio/starter-analysis-exercise/data/raw-data/exampledata2.xlsx\"\n\n#load data. \nmydata &lt;- read_xlsx(data_location)\n\n\n######################################\n#Data fitting/statistical analysis\n######################################\n\n############################\n#### First model fit\n# fit linear model using height as outcome, weight as predictor\n\nlmfit1 &lt;- lm(Height ~ Weight, mydata)  \n\n# place results from fit into a data frame with the tidy function\nlmtable1 &lt;- broom::tidy(lmfit1)\n\n#look at fit results\nprint(lmtable1)\n\n# A tibble: 2 × 5\n  term        estimate std.error statistic p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)   78.6      42.6        1.85  0.0920\n2 Weight         0.992     0.592      1.68  0.122 \n\n# save fit results table  \ntable_file1 = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"resulttable1.rds\")\nsaveRDS(lmtable1, file = table_file1)\n\n############################\n#### Second model fit\n# fit linear model using height as outcome, weight and gender as predictor\n\nlmfit2 &lt;- lm(Height ~ Weight + Gender, mydata)  \n\n# place results from fit into a data frame with the tidy function\nlmtable2 &lt;- broom::tidy(lmfit2)\n\n#look at fit results\nprint(lmtable2)\n\n# A tibble: 6 × 5\n  term        estimate std.error statistic p.value\n  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 (Intercept)   83.4      46.1       1.81    0.114\n2 Weight         0.413     0.710     0.582   0.579\n3 GenderM       48.7      27.8       1.75    0.124\n4 GenderN       49.3      43.5       1.13    0.294\n5 GenderNA      71.5      48.6       1.47    0.185\n6 GenderO       49.1      36.7       1.34    0.223\n\n# save fit results table  \ntable_file2 = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"resulttable2.rds\")\nsaveRDS(lmtable2, file = table_file2)\n\nhist(mydata$Height)\n\n\n\nplot(mydata$`Shoe Size`, mydata$Height)\n\n\n\nplot(mydata$Weight, mydata$Height)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "3.3 Statistical analysis",
    "text": "3.3 Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.1 Exploratory/Descriptive analysis",
    "text": "4.1 Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.2 Basic statistical analysis",
    "text": "4.2 Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "4.3 Full analysis",
    "text": "4.3 Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n83.3941985\n46.1391000\n1.8074518\n0.1136380\n\n\nWeight\n0.4128102\n0.7097063\n0.5816634\n0.5790348\n\n\nGenderM\n48.6706573\n27.8318920\n1.7487369\n0.1238210\n\n\nGenderN\n49.3140510\n43.4749441\n1.1343097\n0.2940106\n\n\nGenderNA\n71.4528840\n48.5954538\n1.4703615\n0.1849282\n\n\nGenderO\n49.0809859\n36.7234455\n1.3365027\n0.2231903"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.1 Summary and Interpretation",
    "text": "5.1 Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.2 Strengths and Limitations",
    "text": "5.2 Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript/Report Template for a Data Analysis Project",
    "section": "5.3 Conclusions",
    "text": "5.3 Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper (Leek & Peng, 2015) discusses types of analyses.\nThese papers (McKay, Ebell, Billings, et al., 2020; McKay, Ebell, Dale, et al., 2020) are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(dplyr) #for data processing/cleaning\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(skimr) #for nice visualization of data \n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(here) #to set paths\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/alexm/Downloads/Pract 2/AlexMartinez-P2-portfolio\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/alexm/Downloads/Pract 2/AlexMartinez-P2-portfolio\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\n\nWarning: package 'skimr' was built under R version 4.3.3\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "The data I am getting is about president approval votes from here.\n\nlibraries\n\nlibrary(readr)\n\nWarning: package 'readr' was built under R version 4.3.3\n\nlibrary(gridExtra)\n\nWarning: package 'gridExtra' was built under R version 4.3.3\n\nlibrary(grid)\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following object is masked from 'package:gridExtra':\n\n    combine\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\n\ndata\n\ndata &lt;- read.csv(\"C:/Users/alexm/Downloads/Pract 2/AlexMartinez-P2-portfolio/presentation-exercise/president_approval_polls.csv\")\n# Convert start_date to Date type\ndata$start_date &lt;- as.Date(data$start_date, format = \"%m/%d/%Y\")\n\n\n\nAI Code\n\nlibrary(zoo)\n\nWarning: package 'zoo' was built under R version 4.3.3\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\nlibrary(plotly)\n\nWarning: package 'plotly' was built under R version 4.3.3\n\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(gt)\n\nWarning: package 'gt' was built under R version 4.3.3\n\n# Calculate rolling averages and standard deviations\ndata &lt;- data %&gt;%\n  mutate(approve_smooth = rollmean(yes, 30, fill = NA, align = 'right'),\n         disapprove_smooth = rollmean(no, 30, fill = NA, align = 'right'),\n         approve_std = rollapply(yes, 30, sd, fill = NA, align = 'right'),\n         disapprove_std = rollapply(no, 30, sd, fill = NA, align = 'right'))\n\n# Calculate confidence intervals\ndata &lt;- data %&gt;%\n  mutate(approve_ci = 1.96 * (approve_std / sqrt(7)),\n         disapprove_ci = 1.96 * (disapprove_std / sqrt(7)))\n\ndata &lt;- data %&gt;%\n  filter(!is.na(approve_smooth) | !is.na(disapprove_smooth))\n\n\n# Plot the graph\nfig &lt;- plot_ly(data, x = ~start_date) %&gt;%\n  add_ribbons(ymin = ~approve_smooth - approve_ci, ymax = ~approve_smooth + approve_ci,\n              line = list(color = 'rgba(0,100,80,0.2)'),\n              fillcolor = 'rgba(0,100,80,0.2)',\n              name = 'Approval CI',\n              hovertemplate = paste('%{y:.2f}%')) %&gt;%\n  add_ribbons(ymin = ~disapprove_smooth - disapprove_ci, ymax = ~disapprove_smooth + disapprove_ci,\n              line = list(color = 'rgba(160,32,240,0.2)'),\n              fillcolor = 'rgba(160,32,240,0.2)',\n              name = 'Disapproval CI',\n              hovertemplate = paste('%{y:.2f}%')) %&gt;%\n  add_lines(y = ~approve_smooth, name = 'Approval', line = list(color = 'green'),\n            hovertemplate = paste('Approval: %{y:.2f}%&lt;extra&gt;&lt;/extra&gt;')) %&gt;%\n  add_lines(y = ~disapprove_smooth, name = 'Disapproval', line = list(color = 'purple'),\n            hovertemplate = paste('Disapproval: %{y:.2f}%&lt;extra&gt;&lt;/extra&gt;')) %&gt;%\n  layout(title = 'Presidential Approval and Disapproval Ratings',\n         xaxis = list(title = 'Date', tickformat = \"%b %Y\"),\n         yaxis = list(title = 'Percentage', range = c(20, 80)),\n         hovermode = 'x unified')\n\nfig\n\n\n\n\n\n\n\npublication quality table\n\n# Load necessary packages\nlibrary(dplyr)\nlibrary(gt)\n\n# Create a sample data frame\ndata &lt;- tibble(\n  Dates = c(\"Jun. 30-Jul. 2\", \"Jun. 29-Jul. 2\", \"Jun. 28-Jul. 2\", \"Jun. 28-Jul. 1\", \"Jun. 28-30\", \"Jun. 28-30\", \"Jun. 28-30\", \"Jun. 28-30\", \"Jun. 1-30\"),\n  Sample = c(\"1,608A\", \"1,500RV\", \"1,235RV\", \"1,754A\", \"2,090RV\", \"1,000RV\", \"1,274RV\", \"1,500RV\", \"2,988RV\"),\n  Pollster = c(\"YouGov\", \"Fabrizio, Lee & Associates/GBAO\", \"The New York Times/Siena College\", \"YouGov\", \"Harris Insights & Analytics\", \"Suffolk University\", \"CNN\", \"Harris Insights & Analytics\", \"ActiVote\"),\n  Weight = c(0.61, 1.07, 0.69, 0.63, 0.89, 0.87, 0.98, 0.76, 1.51),\n  Approval = c(37, 39, 34, 38, 40, 41, 36, 38, 38),\n  Disapproval = c(57, 60, 62, 57, 57, 57, 64, 57, 55),\n  Adjusted_Approval = c(37, 38, 35, 38, 37, 41, 34, 35, 38),\n  Adjusted_Disapproval = c(58, 58, 60, 58, 57, 55, 60, 57, 55),\n  Net_Approval = c(\"Disapprove+21\", \"Disapprove+20\", \"Disapprove+24\", \"Disapprove+20\", \"Disapprove+20\", \"Disapprove+14\", \"Disapprove+27\", \"Disapprove+22\", \"Disapprove+17\")\n)\n\n# Convert Approval and Disapproval values to proportions\ndata &lt;- data %&gt;%\n  mutate(\n    across(c(Approval, Disapproval, Adjusted_Approval, Adjusted_Disapproval), ~ . / 100)\n  )\n\n# Create the table using gt\ntable &lt;- data %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = \"Presidential Approval and Disapproval Ratings\",\n    subtitle = \"Poll Summary\"\n  ) %&gt;%\n  cols_label(\n    Dates = \"DATES\",\n    Sample = \"SAMPLE\",\n    Pollster = \"POLLSTER\",\n    Weight = \"WEIGHT\",\n    Approval = \"RESULT (APPROVAL)\",\n    Disapproval = \"RESULT (DISAPPROVAL)\",\n    Adjusted_Approval = \"ADJUSTED (APPROVAL)\",\n    Adjusted_Disapproval = \"ADJUSTED (DISAPPROVAL)\",\n    Net_Approval = \"ADJUSTED NET APPROVAL\"\n  ) %&gt;%\n  cols_align(\n    align = \"center\",\n    columns = everything()\n  ) %&gt;%\n  fmt_percent(\n    columns = c(Approval, Disapproval, Adjusted_Approval, Adjusted_Disapproval),\n    decimals = 0\n  ) %&gt;%\n  tab_options(\n    table.width = pct(100),\n    column_labels.font.size = 12,\n    table.font.size = 12,\n    heading.title.font.size = 14,\n    heading.subtitle.font.size = 12\n  ) %&gt;%\n  data_color(\n    columns = c(Approval, Disapproval, Adjusted_Approval, Adjusted_Disapproval),\n    colors = scales::col_numeric(\n      palette = c(\"green\", \"white\", \"red\"),\n      domain = c(0, 1)\n    )\n  )\n\nWarning: Since gt v0.9.0, the `colors` argument has been deprecated.\n• Please use the `fn` argument instead.\nThis warning is displayed once every 8 hours.\n\n# Display the table\ntable\n\n\n\n\n\n  \n    \n      Presidential Approval and Disapproval Ratings\n    \n    \n      Poll Summary\n    \n    \n      DATES\n      SAMPLE\n      POLLSTER\n      WEIGHT\n      RESULT (APPROVAL)\n      RESULT (DISAPPROVAL)\n      ADJUSTED (APPROVAL)\n      ADJUSTED (DISAPPROVAL)\n      ADJUSTED NET APPROVAL\n    \n  \n  \n    Jun. 30-Jul. 2\n1,608A\nYouGov\n0.61\n37%\n57%\n37%\n58%\nDisapprove+21\n    Jun. 29-Jul. 2\n1,500RV\nFabrizio, Lee & Associates/GBAO\n1.07\n39%\n60%\n38%\n58%\nDisapprove+20\n    Jun. 28-Jul. 2\n1,235RV\nThe New York Times/Siena College\n0.69\n34%\n62%\n35%\n60%\nDisapprove+24\n    Jun. 28-Jul. 1\n1,754A\nYouGov\n0.63\n38%\n57%\n38%\n58%\nDisapprove+20\n    Jun. 28-30\n2,090RV\nHarris Insights & Analytics\n0.89\n40%\n57%\n37%\n57%\nDisapprove+20\n    Jun. 28-30\n1,000RV\nSuffolk University\n0.87\n41%\n57%\n41%\n55%\nDisapprove+14\n    Jun. 28-30\n1,274RV\nCNN\n0.98\n36%\n64%\n34%\n60%\nDisapprove+27\n    Jun. 28-30\n1,500RV\nHarris Insights & Analytics\n0.76\n38%\n57%\n35%\n57%\nDisapprove+22\n    Jun. 1-30\n2,988RV\nActiVote\n1.51\n38%\n55%\n38%\n55%\nDisapprove+17\n  \n  \n  \n\n\n\n\n```"
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Write code that generates a synthetic dataset. This dataset should have multiple variables, and there should be some associations between variables.\nThen write code that explores the data by making plots or tables to confirm that your synthetic data is what you expect it to be.\nThen fit a few simple models to the data. For instance, use the lm or glm functions to fit a linear or logistic model. Make sure your model can recover the associations you built into the data. Explore if and how different models might be able to capture the patterns you see.\nTake some inspiration from the examples shown in the Synthetic Data module.\n\nGenerating the Sysnthetic Dataset\n\n# Load necessary libraries\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\nlibrary(dplyr)\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n# Set seed for reproducibility\nset.seed(111)\n\n# Generate synthetic dataset\nn &lt;- 1000 # number of obs the data has\nage &lt;- rnorm(n, mean = 35, sd = 10) #creating the age variable that picks from a random sample with a mean of 35 and sd of 10\nincome &lt;- age * 1000 + rnorm(n, mean = 20000, sd = 5000) #generates income variable that is a formula of age which adds a number from a random sample with a mean of 20000 and sd of 5000\ngender &lt;- sample(c(\"Male\", \"Female\"), n, replace = TRUE) # creates gender by randomly selecting Male or Female\nspend_score &lt;- 0.5 * income + ifelse(gender == \"Male\", 10000, 15000) + rnorm(n, mean = 0, sd = 3000) #creates a spending score variable that is influenced by income and gender\nbuy &lt;- ifelse(spend_score &gt; median(spend_score), 1, 0) #binary variable based on spend score\n\n# Create the data frame\ndata &lt;- data.frame(age, income, gender, spend_score, buy)\n\n# View the first few rows of the dataset\nhead(data)\n\n       age   income gender spend_score buy\n1 37.35221 54043.23   Male    33226.43   0\n2 31.69264 54795.20 Female    45982.60   1\n3 31.88376 50624.07 Female    40500.48   1\n4 11.97654 18176.95 Female    21812.11   0\n5 33.29124 55927.13 Female    43160.47   1\n6 36.40278 57498.38   Male    38020.94   0\n\n\n\n\nExploratory Analysis\n\n# Summary statistics\nsummary(data) # basic stats of variables\n\n      age             income         gender           spend_score   \n Min.   : 1.767   Min.   :16458   Length:1000        Min.   :15032  \n 1st Qu.:28.463   1st Qu.:47160   Class :character   1st Qu.:35763  \n Median :35.197   Median :55208   Mode  :character   Median :40296  \n Mean   :35.108   Mean   :54797                      Mean   :40011  \n 3rd Qu.:41.756   3rd Qu.:61953                      3rd Qu.:44418  \n Max.   :64.260   Max.   :87198                      Max.   :60675  \n      buy     \n Min.   :0.0  \n 1st Qu.:0.0  \n Median :0.5  \n Mean   :0.5  \n 3rd Qu.:1.0  \n Max.   :1.0  \n\n# scatter plot of age and income\nggplot(data, aes(x = age, y = income)) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Age vs Income\", x = \"Age\", y = \"Income\")\n\n\n\n# scatter plot of income and spend_score\nggplot(data, aes(x = income, y = spend_score, color = gender)) +\n  geom_point() +\n  theme_minimal() +\n  labs(title = \"Income vs Spend Score\", x = \"Income\", y = \"Spend Score\")\n\n\n\n# bar plot of spend_score\nggplot(data, aes(x = spend_score, fill = as.factor(buy))) +\n  geom_histogram(binwidth = 5000, position = \"dodge\") +\n  theme_minimal() +\n  labs(title = \"Spend Score Distribution by Purchase Decision\", x = \"Spend Score\", fill = \"Buy\")\n\n\n\n\n\n\nRegression models\n\n# Fit a linear regression model\nlm_model &lt;- lm(spend_score ~ income + age + gender, data = data)\nsummary(lm_model)\n\n\nCall:\nlm(formula = spend_score ~ income + age + gender, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-9238.4 -2097.3   -35.6  2222.7  9290.1 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  1.506e+04  5.367e+02  28.054   &lt;2e-16 ***\nincome       4.916e-01  2.014e-02  24.415   &lt;2e-16 ***\nage          6.854e+00  2.290e+01   0.299    0.765    \ngenderMale  -4.409e+03  1.978e+02 -22.295   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3127 on 996 degrees of freedom\nMultiple R-squared:  0.7873,    Adjusted R-squared:  0.7866 \nF-statistic:  1229 on 3 and 996 DF,  p-value: &lt; 2.2e-16\n\n# Fit a logistic regression model\nglm_model &lt;- glm(buy ~ spend_score + income + age + gender, family = binomial(link = \"logit\"), data = data)\n\nWarning: glm.fit: algorithm did not converge\n\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\nsummary(glm_model)\n\n\nCall:\nglm(formula = buy ~ spend_score + income + age + gender, family = binomial(link = \"logit\"), \n    data = data)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)\n(Intercept) -1.547e+04  2.596e+05  -0.060    0.952\nspend_score  3.810e-01  6.396e+00   0.060    0.953\nincome       4.995e-04  3.242e-01   0.002    0.999\nage          2.630e+00  1.590e+02   0.017    0.987\ngenderMale  -2.818e+01  5.405e+03  -0.005    0.996\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 1.3863e+03  on 999  degrees of freedom\nResidual deviance: 1.5808e-05  on 995  degrees of freedom\nAIC: 10\n\nNumber of Fisher Scoring iterations: 25\n\n\nFirst is the linear regression where spend_score is the dependent variable income, age, and genderMale are the independent variables. We see that the overall model is significant with a p-value &lt; 0.05 and that 79% of the variation in the model can be explained by the predictor variables. We see that age is not significant at predicting spend_score but income and genderMale are significant and predicting spend_score.\nThe second model is a logistic model where we are predicting the binary buy variable with spend_score, income, age and genderMale as the independent variables. Each statistic represents the log odds of the variable so:\nSpend Score Coefficient: The change in the log-odds of making a purchase for each one-unit increase in spend_score, holding other variables constant. Income Coefficient: The change in the log-odds of making a purchase for each one-unit increase in income, holding other variables constant. Age Coefficient: The change in the log-odds of making a purchase for each one-year increase in age, holding other variables constant. Gender Coefficient: The difference in the log-odds of making a purchase between Male and the reference gender (Female in this case), holding other variables constant."
  },
  {
    "objectID": "cdcdata-exercise/cdcdata-exercise.html",
    "href": "cdcdata-exercise/cdcdata-exercise.html",
    "title": "Assignment 5 Processing Data",
    "section": "",
    "text": "My Data\nThe data set I chosed is ORal health infromation from children in school. Some important variables it has is\n\nCaries Experience. Percentage of children with caries experience, including treated and untreated tooth decay.\nUntreated Tooth Decay. Percentage of children with untreated tooth decay.\nDental Sealants. Percentage of children with dental sealants on at least one permanent molar tooth.\n\nHere is more information from the website below:\nData for School year-end 1994 through year-end 2020. State oral health surveys are the data sources for these indicators. States periodically conduct independent screening surveys of a probability sample designed to be representative of all third-grade students in the state. Some states also conduct surveys of students in other grades in school, or of Head Start program enrollees. This surveillance activity is voluntary. States submit their data to the Association of State and Territorial Dental Directors (ASTDD), where the survey design and data collected are reviewed for quality and against the criteria for inclusion in NOHSS, before being sent to CDC for inclusion in Oral Health Data. For more information,see: http://www.cdc.gov/oralhealthdata/overview/childIndicators/\n\n\nExploring my dataset\n\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tibble' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'purrr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'stringr' was built under R version 4.3.3\n\n\nWarning: package 'forcats' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\ngetwd()\n\n[1] \"C:/Users/alexm/Downloads/Pract 2/AlexMartinez-P2-portfolio/cdcdata-exercise\"\n\ndata &lt;- read.csv(\"C:/Users/alexm/Downloads/Pract 2/AlexMartinez-P2-portfolio/cdcdata-exercise/CDCdata.csv\")\n\nstr(data)\n\n'data.frame':   625 obs. of  37 variables:\n $ LatestDataforGrade                          : chr  \"No\" \"Yes\" \"No\" \"Yes\" ...\n $ SchoolYearStart                             : int  2004 2019 2007 2004 2000 2009 2000 2002 2017 2009 ...\n $ SchoolYearEnd                               : int  2005 2020 2008 2005 2001 2010 2001 2003 2018 2010 ...\n $ LocationAbbr                                : chr  \"MO\" \"TX\" \"AK\" \"CA\" ...\n $ Topic                                       : chr  \"Child\" \"Child\" \"Child\" \"Child\" ...\n $ Grade                                       : chr  \"Third Grade\" \"Kindergarten\" \"Third Grade\" \"Third Grade\" ...\n $ Indicator                                   : chr  \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" \"Dental Sealants: Percentage of students with dental sealants on at least one permanent molar tooth\" \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" ...\n $ DataSource                                  : chr  \"State Oral Health Survey\" \"State Oral Health Survey\" \"State Oral Health Survey\" \"State Oral Health Survey\" ...\n $ Data_Value_Unit                             : chr  \"%\" \"%\" \"%\" \"%\" ...\n $ Data_Value_Type                             : chr  \"Percentage\" \"Percentage\" \"Percentage\" \"Percentage\" ...\n $ Data_Value                                  : num  27 19.7 55.3 28.7 38 23.5 NA 17.2 17.5 60.4 ...\n $ Data_Value_Footnote_Symbol                  : chr  \"\" \"\" \"\" \"\" ...\n $ Data_Value_Footnote                         : chr  \"\" \"\" \"\" \"\" ...\n $ Low_Confidence_Interval                     : num  26 16.9 51.9 27 35.2 21.5 NA 11.9 15.4 57.9 ...\n $ High_Confidence_Interval                    : num  28 22.5 58.7 30.4 40.9 25.5 NA 22.6 19.7 62.9 ...\n $ Confidence_Interval_Footnote_Symbol         : chr  \"\" \"\" \"\" \"\" ...\n $ Confidence_Interval_Footnote                : chr  \"\" \"\" \"\" \"\" ...\n $ Sample_Size                                 : int  3535 4723 826 10444 3188 1928 800 417 4630 1499 ...\n $ Response_Rate                               : int  49 35 48 52 73 55 62 68 33 90 ...\n $ Response_Rate_Footnote_Symbol               : chr  \"\" \"\" \"\" \"\" ...\n $ Response_Rate_Footnote                      : chr  \"\" \"\" \"\" \"\" ...\n $ Adjusted_for_NonResponse                    : chr  \"Yes\" \"Yes\" \"No\" \"Yes\" ...\n $ Percent_eligible_for_the_NSLP_SampleSchools : int  45 63 42 64 50 74 NA 31 63 36 ...\n $ NSLP_SampleSchools_Footnote_Symbol          : chr  \"\" \"\" \"\" \"\" ...\n $ NSLP_SampleSchools_Footnote                 : chr  \"\" \"\" \"\" \"\" ...\n $ Percent_eligible_for_the_NSLP_SampleStudents: int  NA 73 NA NA NA 73 NA NA 68 NA ...\n $ NSLP_SampleStudents_Footnote_Symbol         : chr  \"NC\" \"\" \"NC\" \"NC\" ...\n $ NSLP_SampleStudents_Footnote                : chr  \"Not Collected\" \"\" \"Not Collected\" \"Not Collected\" ...\n $ Percent_eligible_for_the_NSLP_State         : int  46 62 46 57 39 72 NA 31 62 36 ...\n $ NSLP_State_Footnote_Symbol                  : chr  \"\" \"\" \"\" \"\" ...\n $ NSLP_State_Footnote                         : chr  \"\" \"\" \"\" \"\" ...\n $ LocationDesc                                : chr  \"Missouri\" \"Texas\" \"Alaska\" \"California\" ...\n $ LocationID                                  : int  29 48 2 6 16 28 49 50 48 38 ...\n $ GeoLocation                                 : chr  \"(38.635790776000476, -92.56630005299968)\" \"(31.827240407000488, -99.42677020599967)\" \"(64.84507995700051, -147.72205903599973)\" \"(37.63864012300047, -120.99999953799971)\" ...\n $ GradeID                                     : chr  \"3GRADE\" \"KGRADE\" \"3GRADE\" \"3GRADE\" ...\n $ SortGradeID                                 : int  5 2 5 5 4 5 4 3 5 5 ...\n $ IndicatorID                                 : chr  \"CHD1_3\" \"CHD1_3\" \"CHD1_2\" \"CHD1_3\" ...\n\n\nFirst I will select the variables I will work with before I clean my data\n\ndata &lt;- data %&gt;% select(SchoolYearStart,LocationAbbr, Grade, Indicator,Data_Value, Data_Value_Footnote, Sample_Size, Response_Rate)\nstr(data)\n\n'data.frame':   625 obs. of  8 variables:\n $ SchoolYearStart    : int  2004 2019 2007 2004 2000 2009 2000 2002 2017 2009 ...\n $ LocationAbbr       : chr  \"MO\" \"TX\" \"AK\" \"CA\" ...\n $ Grade              : chr  \"Third Grade\" \"Kindergarten\" \"Third Grade\" \"Third Grade\" ...\n $ Indicator          : chr  \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" \"Dental Sealants: Percentage of students with dental sealants on at least one permanent molar tooth\" \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" ...\n $ Data_Value         : num  27 19.7 55.3 28.7 38 23.5 NA 17.2 17.5 60.4 ...\n $ Data_Value_Footnote: chr  \"\" \"\" \"\" \"\" ...\n $ Sample_Size        : int  3535 4723 826 10444 3188 1928 800 417 4630 1499 ...\n $ Response_Rate      : int  49 35 48 52 73 55 62 68 33 90 ...\n\nsummary(data)\n\n SchoolYearStart LocationAbbr          Grade            Indicator        \n Min.   :1993    Length:625         Length:625         Length:625        \n 1st Qu.:2004    Class :character   Class :character   Class :character  \n Median :2009    Mode  :character   Mode  :character   Mode  :character  \n Mean   :2009                                                            \n 3rd Qu.:2014                                                            \n Max.   :2019                                                            \n                                                                         \n   Data_Value    Data_Value_Footnote  Sample_Size    Response_Rate \n Min.   : 6.70   Length:625          Min.   :  206   Min.   :15.0  \n 1st Qu.:23.90   Class :character    1st Qu.: 1060   1st Qu.:46.0  \n Median :38.75   Mode  :character    Median : 2056   Median :63.0  \n Mean   :38.76                       Mean   : 2957   Mean   :61.2  \n 3rd Qu.:52.08                       3rd Qu.: 3312   3rd Qu.:77.0  \n Max.   :89.70                       Max.   :87715   Max.   :99.0  \n NA's   :11                                          NA's   :64    \n\nhead(data)\n\n  SchoolYearStart LocationAbbr        Grade\n1            2004           MO  Third Grade\n2            2019           TX Kindergarten\n3            2007           AK  Third Grade\n4            2004           CA  Third Grade\n5            2000           ID Second Grade\n6            2009           MS  Third Grade\n                                                                                           Indicator\n1                           Untreated Tooth Decay: Percentage of students with untreated tooth decay\n2                           Untreated Tooth Decay: Percentage of students with untreated tooth decay\n3 Dental Sealants: Percentage of students with dental sealants on at least one permanent molar tooth\n4                           Untreated Tooth Decay: Percentage of students with untreated tooth decay\n5 Dental Sealants: Percentage of students with dental sealants on at least one permanent molar tooth\n6 Dental Sealants: Percentage of students with dental sealants on at least one permanent molar tooth\n  Data_Value Data_Value_Footnote Sample_Size Response_Rate\n1       27.0                            3535            49\n2       19.7                            4723            35\n3       55.3                             826            48\n4       28.7                           10444            52\n5       38.0                            3188            73\n6       23.5                            1928            55\n\n# Convert necessary columns to appropriate data types\ndata &lt;- data %&gt;%\n  mutate(\n    Data_Value = as.numeric(Data_Value),\n    Sample_Size = as.numeric(Sample_Size),\n    Response_Rate = as.numeric(Response_Rate)\n  )\n\nstr(data)\n\n'data.frame':   625 obs. of  8 variables:\n $ SchoolYearStart    : int  2004 2019 2007 2004 2000 2009 2000 2002 2017 2009 ...\n $ LocationAbbr       : chr  \"MO\" \"TX\" \"AK\" \"CA\" ...\n $ Grade              : chr  \"Third Grade\" \"Kindergarten\" \"Third Grade\" \"Third Grade\" ...\n $ Indicator          : chr  \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" \"Dental Sealants: Percentage of students with dental sealants on at least one permanent molar tooth\" \"Untreated Tooth Decay: Percentage of students with untreated tooth decay\" ...\n $ Data_Value         : num  27 19.7 55.3 28.7 38 23.5 NA 17.2 17.5 60.4 ...\n $ Data_Value_Footnote: chr  \"\" \"\" \"\" \"\" ...\n $ Sample_Size        : num  3535 4723 826 10444 3188 ...\n $ Response_Rate      : num  49 35 48 52 73 55 62 68 33 90 ...\n\n# Exploratory data analysis\nsummary_stats &lt;- data %&gt;%\n  summarise(\n    Data_Value_mean = mean(Data_Value, na.rm = TRUE),\n    Data_Value_sd = sd(Data_Value, na.rm = TRUE),\n    Data_Value_min = min(Data_Value, na.rm = TRUE),\n    Data_Value_max = max(Data_Value, na.rm = TRUE),\n    Sample_Size_mean = mean(Sample_Size, na.rm = TRUE),\n    Sample_Size_sd = sd(Sample_Size, na.rm = TRUE),\n    Sample_Size_min = min(Sample_Size, na.rm = TRUE),\n    Sample_Size_max = max(Sample_Size, na.rm = TRUE),\n    Response_Rate_mean = mean(Response_Rate, na.rm = TRUE),\n    Response_Rate_sd = sd(Response_Rate, na.rm = TRUE),\n    Response_Rate_min = min(Response_Rate, na.rm = TRUE),\n    Response_Rate_max = max(Response_Rate, na.rm = TRUE)\n  )\n\nprint(summary_stats)\n\n  Data_Value_mean Data_Value_sd Data_Value_min Data_Value_max Sample_Size_mean\n1        38.75782      17.29882            6.7           89.7         2957.069\n  Sample_Size_sd Sample_Size_min Sample_Size_max Response_Rate_mean\n1        5445.31             206           87715           61.19964\n  Response_Rate_sd Response_Rate_min Response_Rate_max\n1         18.71543                15                99\n\n# Distribution of Data_Value\nggplot(data, aes(x = Data_Value)) +\n  geom_histogram(binwidth = 2, fill = 'blue', color = 'black') +\n  theme_minimal() +\n  labs(title = 'Distribution of Data_Value', x = 'Data_Value', y = 'Frequency')\n\nWarning: Removed 11 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n# Distribution of Sample_Size\nggplot(data, aes(x = Sample_Size)) +\n  geom_histogram(binwidth = 500, fill = 'green', color = 'black') +\n  theme_minimal() +\n  labs(title = 'Distribution of Sample_Size', x = 'Sample_Size', y = 'Frequency')\n\n\n\n# Distribution of Response_Rate\nggplot(data, aes(x = Response_Rate)) +\n  geom_histogram(binwidth = 5, fill = 'red', color = 'black') +\n  theme_minimal() +\n  labs(title = 'Distribution of Response_Rate', x = 'Response_Rate', y = 'Frequency')\n\nWarning: Removed 64 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n# Percentage of each category in Grade\ngrade_dist &lt;- data %&gt;%\n  group_by(Grade) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = count / sum(count) * 100)\n\nprint(grade_dist)\n\n# A tibble: 5 × 3\n  Grade        count percentage\n  &lt;chr&gt;        &lt;int&gt;      &lt;dbl&gt;\n1 First Grade     39       6.24\n2 Head Start      50       8   \n3 Kindergarten    74      11.8 \n4 Second Grade    51       8.16\n5 Third Grade    411      65.8 \n\n# Percentage of each category in Indicator\nindicator_dist &lt;- data %&gt;%\n  group_by(Indicator) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = count / sum(count) * 100)\n\nprint(indicator_dist)\n\n# A tibble: 3 × 3\n  Indicator                                                     count percentage\n  &lt;chr&gt;                                                         &lt;int&gt;      &lt;dbl&gt;\n1 Caries Experience: Percentage of students with caries experi…   229       36.6\n2 Dental Sealants: Percentage of students with dental sealants…   167       26.7\n3 Untreated Tooth Decay: Percentage of students with untreated…   229       36.6\n\n# Percentage of each category in LocationAbbr\nlocation_dist &lt;- data %&gt;%\n  group_by(LocationAbbr) %&gt;%\n  summarise(count = n()) %&gt;%\n  mutate(percentage = count / sum(count) * 100)\n\nprint(location_dist)\n\n# A tibble: 48 × 3\n   LocationAbbr count percentage\n   &lt;chr&gt;        &lt;int&gt;      &lt;dbl&gt;\n 1 AK              13       2.08\n 2 AL               8       1.28\n 3 AR               9       1.44\n 4 AZ              19       3.04\n 5 CA               5       0.8 \n 6 CO              20       3.2 \n 7 CT              19       3.04\n 8 DE               6       0.96\n 9 FL               8       1.28\n10 GA              11       1.76\n# ℹ 38 more rows"
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Talk a bit about yourself, your background, training, research interests. Let me/us know what kind of statistics, programming, data analysis experience you already have. I’d also be curious to know what you most hope to learn in this course. And then tell us some quirky/interesting/curious thing about you.\nI am Alex Martinez who graduated with a bachelor’s degree in Statistics and Data Science at UTSA. I currently work at USAA with the Deposit and Fraud Oversight team. I am familiar with stats since it is my undergrad but I do hope to strenghten my skills with modeling and coding in sAS/R.\nGive your text a nice structure with headings, subheadings, etc.\nInclude a picture of yourself. To do so, place the picture in the repository and link it from the Quarto file.\n\nknitr::include_graphics(\"black suit.jpeg\")\n\n\n\n\nFinally, include a link to a picture/video/website/etc. The linked material should be somehow related to data analysis. Find something that you think is really cool/interesting/weird/etc. Provide a few explanatory sentences.\nTesla Energy Saving Data for users. I am a fan of tesla so I think its cool/interesting that Tesla provides quick and easy visualization that is data driven by the user. They are able to learn how they maximize there benefits by saving on renewable energy at there house! One can view there history and timescales on energy savings from there home, vehicle, powerwall, solar, grid, and much more from there telephone.\nIf you want, feel free to get creative and include other things. You can play with Quarto if you wish to, e.g., you can try to include a table or a video or any other elments you want to explore."
  },
  {
    "objectID": "aboutme.html#some-questons-about-myself",
    "href": "aboutme.html#some-questons-about-myself",
    "title": "About me",
    "section": "",
    "text": "Talk a bit about yourself, your background, training, research interests. Let me/us know what kind of statistics, programming, data analysis experience you already have. I’d also be curious to know what you most hope to learn in this course. And then tell us some quirky/interesting/curious thing about you.\nI am Alex Martinez who graduated with a bachelor’s degree in Statistics and Data Science at UTSA. I currently work at USAA with the Deposit and Fraud Oversight team. I am familiar with stats since it is my undergrad but I do hope to strenghten my skills with modeling and coding in sAS/R.\nGive your text a nice structure with headings, subheadings, etc.\nInclude a picture of yourself. To do so, place the picture in the repository and link it from the Quarto file.\n\nknitr::include_graphics(\"black suit.jpeg\")\n\n\n\n\nFinally, include a link to a picture/video/website/etc. The linked material should be somehow related to data analysis. Find something that you think is really cool/interesting/weird/etc. Provide a few explanatory sentences.\nTesla Energy Saving Data for users. I am a fan of tesla so I think its cool/interesting that Tesla provides quick and easy visualization that is data driven by the user. They are able to learn how they maximize there benefits by saving on renewable energy at there house! One can view there history and timescales on energy savings from there home, vehicle, powerwall, solar, grid, and much more from there telephone.\nIf you want, feel free to get creative and include other things. You can play with Quarto if you wish to, e.g., you can try to include a table or a video or any other elments you want to explore."
  },
  {
    "objectID": "aboutme.html#cool-plot-using-r",
    "href": "aboutme.html#cool-plot-using-r",
    "title": "About me",
    "section": "Cool Plot using R",
    "text": "Cool Plot using R\nHere’s an example of a cool plot created using the ggplot2 package in R.\n\n#packages\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n#sample dataset\nset.seed(11)\ndata &lt;- data.frame(\n  x = rnorm(100),\n  y = rnorm(100)\n)\n\n#plot\np &lt;- ggplot(data, aes(x = x, y = y)) +\n  geom_point(color = 'blue') +  # Scatter plot points\n  geom_smooth(method = 'loess', color = 'red') +  # Smooth line\n  labs(title = \"Cool Scatter Plot with Smooth Line\",\n       x = \"X Axis\",\n       y = \"Y Axis\") +\n  theme_minimal()  # Minimal theme for a clean look\n\n# Print the plot\nprint(p)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "First thing we will do is load in the libraries we need for the following code.\n\nlibrary('dslabs') #This loads in the dslabs library. You will fist need to install the package before running this command.\n\nWarning: package 'dslabs' was built under R version 4.3.3\n\nlibrary(tidyverse) # library for data processing tasks.\n\nWarning: package 'tidyverse' was built under R version 4.3.3\n\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tibble' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'readr' was built under R version 4.3.3\n\n\nWarning: package 'purrr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'stringr' was built under R version 4.3.3\n\n\nWarning: package 'forcats' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nhelp(gapminder)#look at help file for gapminder data\n\nstarting httpd help server ... done\n\n\n\nOverview of the gapminder data\nHere we show some quick functions to learn your dataset and its variables quickly.\n\nstr(gapminder) # this code gives the variable descriptions/information\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\nsummary(gapminder) # this gives you quick summary statistics of each variable\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\nclass(gapminder) # this gives the object of gapminder\n\n[1] \"data.frame\"\n\n\nWrite code that assigns only the African countries to a new object/variable called africadata. Run str and summary on the new object you created. You should now have 2907 observations, down from 10545. Depending on how you do this, you might also notice that all the different categories are still kept in the continent (and other) variables, but show 0. R does not automatically remove categories of what in R is called a factor variable (a categorical variable) even if they are empty. We don’t have to worry about that just now, but something to keep in mind, it can sometimes lead to strange behavior.\n\nafricadata &lt;- gapminder %&gt;% filter(continent == 'Africa') #filters for Africa continent only\nstr(africadata) # variable description\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(africadata) #variables summary statistics\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\nTake the africadata object and create two new objects (name them whatever you want), one that contains only infant_mortality and life_expectancy and one that contains only population and life_expectancy. You should have two new objects/variables with 2907 rows and two columns. Use the str, and summary commands to take a look at both. Make sure you add comments into your code to explain what each line of code is doing, and as needed, also add additional explanatory Markdown text to your Quarto file.\n\na1 &lt;- africadata %&gt;% select(infant_mortality, life_expectancy) #this  selects the 2 variables i want and assigns it to a1\nstr(a1)# variable description\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(a1)#variables summary statistics\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\na2 &lt;- africadata %&gt;% select(population, life_expectancy) #this  selects the 2 variables i want and assigns it to a2\nstr(a2)# variable description\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\nsummary(a2)#variables summary statistics\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51                         \n\n\nUsing the new variables you created, plot life expectancy as a function of infant mortality and as a function of population size. Make two separate plots. Plot the data as points. For the plot with population size on the x-axis, set the x-axis to a log scale.\n\na1 %&gt;% ggplot(aes(x=infant_mortality, y=life_expectancy)) +\n  geom_point() # we use ggplot to make these scatterplots\n\nWarning: Removed 226 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\na2 %&gt;% ggplot(aes(x=log(population), y=life_expectancy)) +\n  geom_point()# we use ggplot to make these scatterplots\n\nWarning: Removed 51 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\nThere seems to be ‘streaks’ of data that are plotted together in both plots. This looks like it is each year that is in Africa and it shows its trend for each streak.\nI’m sure you realized that the pattern we see in the data is due to the fact that we have different years for individual countries, and that over time these countries increase in population size and also life expectancy. Let’s pick only one year and see what patterns we find. We want a year for which we have the most data. You might have noticed that in africadata, there are 226 NA (i.e., missing values) for infant mortality. Write code that figures out which years have missing data for infant mortality. You should find that there is missing up to 1981 and then again for 2016. So we’ll avoid those years and go with 2000 instead. Create a new object by extracting only the data for the year 2000 from the africadata object. You should end up with 51 observations and 9 variables. Check it with str and summary.\n\na2000 &lt;- africadata %&gt;% filter(year == 2000) #only year 2000\nstr(a2000) # variable description\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\nsummary(a2000) #variables summary statistics\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0  \n\n\nLet’s make the same plots as above again, this time only for the year 2000. Based on those plots, there seems to still be a negative correlation between infant mortality and life expectancy, and no noticeable correlation between population size and life expectancy. Let’s apply some statistical model to this data.\n\na2000 %&gt;% ggplot(aes(x=infant_mortality, y=life_expectancy)) +\n  geom_point() # we use ggplot to make these scatterplots\n\n\n\na2000 %&gt;% ggplot(aes(x=log(population), y=life_expectancy)) +\n  geom_point()# we use ggplot to make these scatterplots\n\n\n\n\nUse the lm function and fit life expectancy as the outcome, and infant mortality as the predictor. Then repeat, now with the population size as the predictor variable. (Use the data from 2000 only.) Save the result from the two fits into two objects (e.g. fit1 and fit2) and apply the summary command to both, which will print various fit results to the screen. Based on the p-values for each fit, what do you conclude? Add comments into your quarto file to explain what you did and found.\n\nfit1 &lt;- lm(life_expectancy ~ infant_mortality, data = a2000) # linear model with life_expectancy as the outcome variable and infant mortanlity as the predictor\nsummary(fit1) #summary statistics of the linear model\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = a2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\nfit2 &lt;- lm(life_expectancy ~ population, data = a2000) # linear model with life_expectancy as the outcome variable and infant mortanlity as the predictor\nsummary(fit2) #summary statistics of the linear model\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = a2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\n\n\nLooking at the p-values, we see the model ‘fit1’ has a p-value &lt; 0.05 which means the model is significant at predicting life expectancy using infant mortality. For ‘fit2’ we see the p-value is &gt; then 0.05 which means the model is not significant at predicting life expectancy using population."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!\n\nLETS GET READY TO LEARN 😁!"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "Alex Martinez Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  }
]